versions pytest-3.0.7, py-1.4.33, python-2.7.13.final.0
cwd=/Users/anna/aidoc/training/linkedin
args=['tests', '--debug']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x100bafb90>
    pytest_plugin_registered [hook]
        manager: <_pytest.config.PytestPluginManager object at 0x100909350>
        plugin: <Session 'linkedin'>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x100bafb90>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x1021dd1b8>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: py._io.terminalwriter [assertion]
    find_module called for: py._io.termios [assertion]
    find_module called for: termios [assertion]
    find_module called for: py._io.fcntl [assertion]
    find_module called for: py._io.struct [assertion]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.PytestPluginManager object at 0x100909350>}>
          plugin: <_pytest.config.PytestPluginManager object at 0x100909350>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.Config object at 0x100bafb90>}>
          plugin: <_pytest.config.Config object at 0x100bafb90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.mark' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/mark.pyc'>}>
          plugin: <module '_pytest.mark' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/mark.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.main' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/main.pyc'>}>
          plugin: <module '_pytest.main' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.terminal' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/terminal.pyc'>}>
          plugin: <module '_pytest.terminal' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.runner' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/runner.pyc'>}>
          plugin: <module '_pytest.runner' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.python' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/python.pyc'>}>
          plugin: <module '_pytest.python' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.fixtures' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/fixtures.pyc'>}>
          plugin: <module '_pytest.fixtures' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.debugging' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/debugging.pyc'>}>
          plugin: <module '_pytest.debugging' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.unittest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/unittest.pyc'>}>
          plugin: <module '_pytest.unittest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.capture' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/capture.pyc'>}>
          plugin: <module '_pytest.capture' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.skipping' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/skipping.pyc'>}>
          plugin: <module '_pytest.skipping' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.tmpdir' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>}>
          plugin: <module '_pytest.tmpdir' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.monkeypatch' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>}>
          plugin: <module '_pytest.monkeypatch' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.recwarn' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/recwarn.pyc'>}>
          plugin: <module '_pytest.recwarn' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.pastebin' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/pastebin.pyc'>}>
          plugin: <module '_pytest.pastebin' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.helpconfig' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>}>
          plugin: <module '_pytest.helpconfig' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.nose' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/nose.pyc'>}>
          plugin: <module '_pytest.nose' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.assertion' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>}>
          plugin: <module '_pytest.assertion' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.junitxml' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/junitxml.pyc'>}>
          plugin: <module '_pytest.junitxml' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.resultlog' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/resultlog.pyc'>}>
          plugin: <module '_pytest.resultlog' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.doctest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/doctest.pyc'>}>
          plugin: <module '_pytest.doctest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.cacheprovider' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>}>
          plugin: <module '_pytest.cacheprovider' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.freeze_support' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>}>
          plugin: <module '_pytest.freeze_support' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setuponly' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setuponly.pyc'>}>
          plugin: <module '_pytest.setuponly' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setupplan' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setupplan.pyc'>}>
          plugin: <module '_pytest.setupplan' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'pytest_cov.plugin' from '/Users/anna/anaconda/lib/python2.7/site-packages/pytest_cov/plugin.py'>}>
          plugin: <module 'pytest_cov.plugin' from '/Users/anna/anaconda/lib/python2.7/site-packages/pytest_cov/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.capture.CaptureManager instance at 0x101560f38>}>
          plugin: <_pytest.capture.CaptureManager instance at 0x101560f38>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'tests.conftest' from '/Users/anna/aidoc/training/linkedin/tests/conftest.py'>}>
          plugin: <module 'tests.conftest' from '/Users/anna/aidoc/training/linkedin/tests/conftest.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <Session 'linkedin'>}>
          plugin: <Session 'linkedin'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.cacheprovider.LFPlugin instance at 0x1021dd1b8>}>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x1021dd1b8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x1021dd5a8>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'linkedin'>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.PytestPluginManager object at 0x100909350>}>
          plugin: <_pytest.config.PytestPluginManager object at 0x100909350>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.Config object at 0x100bafb90>}>
          plugin: <_pytest.config.Config object at 0x100bafb90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.mark' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/mark.pyc'>}>
          plugin: <module '_pytest.mark' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/mark.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.main' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/main.pyc'>}>
          plugin: <module '_pytest.main' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.terminal' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/terminal.pyc'>}>
          plugin: <module '_pytest.terminal' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.runner' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/runner.pyc'>}>
          plugin: <module '_pytest.runner' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.python' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/python.pyc'>}>
          plugin: <module '_pytest.python' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.fixtures' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/fixtures.pyc'>}>
          plugin: <module '_pytest.fixtures' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.debugging' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/debugging.pyc'>}>
          plugin: <module '_pytest.debugging' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.unittest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/unittest.pyc'>}>
          plugin: <module '_pytest.unittest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.capture' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/capture.pyc'>}>
          plugin: <module '_pytest.capture' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.skipping' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/skipping.pyc'>}>
          plugin: <module '_pytest.skipping' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.tmpdir' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>}>
          plugin: <module '_pytest.tmpdir' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.monkeypatch' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>}>
          plugin: <module '_pytest.monkeypatch' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.recwarn' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/recwarn.pyc'>}>
          plugin: <module '_pytest.recwarn' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.pastebin' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/pastebin.pyc'>}>
          plugin: <module '_pytest.pastebin' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.helpconfig' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>}>
          plugin: <module '_pytest.helpconfig' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.nose' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/nose.pyc'>}>
          plugin: <module '_pytest.nose' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.assertion' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>}>
          plugin: <module '_pytest.assertion' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.junitxml' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/junitxml.pyc'>}>
          plugin: <module '_pytest.junitxml' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.resultlog' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/resultlog.pyc'>}>
          plugin: <module '_pytest.resultlog' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.doctest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/doctest.pyc'>}>
          plugin: <module '_pytest.doctest' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.cacheprovider' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>}>
          plugin: <module '_pytest.cacheprovider' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/cacheprovider.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.freeze_support' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>}>
          plugin: <module '_pytest.freeze_support' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setuponly' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setuponly.pyc'>}>
          plugin: <module '_pytest.setuponly' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setupplan' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setupplan.pyc'>}>
          plugin: <module '_pytest.setupplan' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'pytest_cov.plugin' from '/Users/anna/anaconda/lib/python2.7/site-packages/pytest_cov/plugin.py'>}>
          plugin: <module 'pytest_cov.plugin' from '/Users/anna/anaconda/lib/python2.7/site-packages/pytest_cov/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.capture.CaptureManager instance at 0x101560f38>}>
          plugin: <_pytest.capture.CaptureManager instance at 0x101560f38>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'tests.conftest' from '/Users/anna/aidoc/training/linkedin/tests/conftest.py'>}>
          plugin: <module 'tests.conftest' from '/Users/anna/aidoc/training/linkedin/tests/conftest.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <Session 'linkedin'>}>
          plugin: <Session 'linkedin'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.cacheprovider.LFPlugin instance at 0x1021dd1b8>}>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x1021dd1b8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x100909350>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.terminal.TerminalReporter instance at 0x1021dd5a8>}>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x1021dd5a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x100909350>
          plugin: <_pytest.fixtures.FixtureManager instance at 0x1021ee0e0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          startdir: /Users/anna/aidoc/training/linkedin
          config: <_pytest.config.Config object at 0x100bafb90>
      finish pytest_report_header --> [['rootdir: /Users/anna/aidoc/training/linkedin, inifile:', 'plugins: cov-2.5.1'], ['using: pytest-3.0.7 pylib-1.4.33', 'setuptools registered plugins:', '  pytest-cov-2.5.1 at /Users/anna/anaconda/lib/python2.7/site-packages/pytest_cov/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'linkedin'>
    perform_collect <Session 'linkedin'> ['tests'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'linkedin'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'linkedin'>
        processing argument /Users/anna/aidoc/training/linkedin/tests [collection]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__pycache__
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__pycache__
                parent: <Session 'linkedin'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__init__.py
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__init__.py
                parent: <Session 'linkedin'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__init__.pyc
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__init__.pyc
                parent: <Session 'linkedin'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/conftest.py
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/conftest.py
                parent: <Session 'linkedin'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/test_app.py
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/test_app.py
                parent: <Session 'linkedin'>
              pytest_pycollect_makemodule [hook]
                  path: /Users/anna/aidoc/training/linkedin/tests/test_app.py
                  parent: <Session 'linkedin'>
              finish pytest_pycollect_makemodule --> <Module 'tests/test_app.py'> [hook]
            finish pytest_collect_file --> [<Module 'tests/test_app.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/test_app.pyc
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/test_app.pyc
                parent: <Session 'linkedin'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__pycache__/conftest.cpython-27-PYTEST.pyc
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__pycache__/conftest.cpython-27-PYTEST.pyc
                parent: <Session 'linkedin'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__pycache__/test_app.cpython-27-PYTEST.pyc
                config: <_pytest.config.Config object at 0x100bafb90>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/anna/aidoc/training/linkedin/tests/__pycache__/test_app.cpython-27-PYTEST.pyc
                parent: <Session 'linkedin'>
            finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'tests/test_app.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tests/test_app.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tests/test_app.py'>
      find_module called for: tests.test_app [assertion]
      matched test file '/Users/anna/aidoc/training/linkedin/tests/test_app.py' [assertion]
      found cached rewritten pyc for '/Users/anna/aidoc/training/linkedin/tests/test_app.py' [assertion]
      find_module called for: tests.flask [assertion]
        pytest_pycollect_makeitem [hook]
            obj: <module '_pytest.assertion.rewrite' from '/Users/anna/anaconda/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>
            collector: <Module 'tests/test_app.py'>
            name: @pytest_ar
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function url_for at 0x1018646e0>
            collector: <Module 'tests/test_app.py'>
            name: url_for
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: {'bytearray': <type 'bytearray'>, 'IndexError': <type 'exceptions.IndexError'>, 'all': <built-in function all>, 'help': Type help() for interactive help, or help(object) for help about object., 'vars': <built-in function vars>, 'SyntaxError': <type 'exceptions.SyntaxError'>, 'unicode': <type 'unicode'>, 'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>, 'memoryview': <type 'memoryview'>, 'isinstance': <built-in function isinstance>, 'copyright': Copyright (c) 2001-2016 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'NameError': <type 'exceptions.NameError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'dict': <type 'dict'>, 'input': <built-in function input>, 'oct': <built-in function oct>, 'bin': <built-in function bin>, 'SystemExit': <type 'exceptions.SystemExit'>, 'StandardError': <type 'exceptions.StandardError'>, 'format': <built-in function format>, 'repr': <built-in function repr>, 'sorted': <built-in function sorted>, 'False': False, 'RuntimeWarning': <type 'exceptions.RuntimeWarning'>, 'list': <type 'list'>, 'iter': <built-in function iter>, 'reload': <built-in function reload>, 'Warning': <type 'exceptions.Warning'>, '__package__': None, 'round': <built-in function round>, 'dir': <built-in function dir>, 'cmp': <built-in function cmp>, 'set': <type 'set'>, 'bytes': <type 'str'>, 'reduce': <built-in function reduce>, 'intern': <built-in function intern>, 'issubclass': <built-in function issubclass>, 'Ellipsis': Ellipsis, 'EOFError': <type 'exceptions.EOFError'>, 'locals': <built-in function locals>, 'BufferError': <type 'exceptions.BufferError'>, 'slice': <type 'slice'>, 'FloatingPointError': <type 'exceptions.FloatingPointError'>, 'sum': <built-in function sum>, 'getattr': <built-in function getattr>, 'abs': <built-in function abs>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'print': <built-in function print>, 'True': True, 'FutureWarning': <type 'exceptions.FutureWarning'>, 'ImportWarning': <type 'exceptions.ImportWarning'>, 'None': None, 'hash': <built-in function hash>, 'ReferenceError': <type 'exceptions.ReferenceError'>, 'len': <built-in function len>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'frozenset': <type 'frozenset'>, '__name__': '__builtin__', 'ord': <built-in function ord>, 'super': <type 'super'>, 'TypeError': <type 'exceptions.TypeError'>, 'license': Type license() to see the full license text, 'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>, 'UserWarning': <type 'exceptions.UserWarning'>, 'filter': <built-in function filter>, 'range': <built-in function range>, 'staticmethod': <type 'staticmethod'>, 'SystemError': <type 'exceptions.SystemError'>, 'BaseException': <type 'exceptions.BaseException'>, 'pow': <built-in function pow>, 'RuntimeError': <type 'exceptions.RuntimeError'>, 'float': <type 'float'>, 'MemoryError': <type 'exceptions.MemoryError'>, 'StopIteration': <type 'exceptions.StopIteration'>, 'globals': <built-in function globals>, 'divmod': <built-in function divmod>, 'enumerate': <type 'enumerate'>, 'apply': <built-in function apply>, 'LookupError': <type 'exceptions.LookupError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'basestring': <type 'basestring'>, 'UnicodeError': <type 'exceptions.UnicodeError'>, 'zip': <built-in function zip>, 'hex': <built-in function hex>, 'long': <type 'long'>, 'next': <built-in function next>, 'ImportError': <type 'exceptions.ImportError'>, 'chr': <built-in function chr>, 'xrange': <type 'xrange'>, 'type': <type 'type'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'Exception': <type 'exceptions.Exception'>, 'tuple': <type 'tuple'>, 'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>, 'reversed': <type 'reversed'>, 'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>, 'IOError': <type 'exceptions.IOError'>, 'hasattr': <built-in function hasattr>, 'delattr': <built-in function delattr>, 'setattr': <built-in function setattr>, 'raw_input': <built-in function raw_input>, 'SyntaxWarning': <type 'exceptions.SyntaxWarning'>, 'compile': <built-in function compile>, 'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'str': <type 'str'>, 'property': <type 'property'>, 'GeneratorExit': <type 'exceptions.GeneratorExit'>, 'int': <type 'int'>, '__import__': <built-in function __import__>, 'KeyError': <type 'exceptions.KeyError'>, 'coerce': <built-in function coerce>, 'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>, 'file': <type 'file'>, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, 'unichr': <built-in function unichr>, 'id': <built-in function id>, 'OSError': <type 'exceptions.OSError'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'min': <built-in function min>, 'UnicodeWarning': <type 'exceptions.UnicodeWarning'>, 'execfile': <built-in function execfile>, 'any': <built-in function any>, 'complex': <type 'complex'>, 'bool': <type 'bool'>, 'ValueError': <type 'exceptions.ValueError'>, 'NotImplemented': NotImplemented, 'map': <built-in function map>, 'buffer': <type 'buffer'>, 'max': <built-in function max>, 'object': <type 'object'>, 'TabError': <type 'exceptions.TabError'>, 'callable': <built-in function callable>, 'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>, 'eval': <built-in function eval>, '__debug__': True, 'IndentationError': <type 'exceptions.IndentationError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'classmethod': <type 'classmethod'>, 'UnboundLocalError': <type 'exceptions.UnboundLocalError'>, 'NotImplementedError': <type 'exceptions.NotImplementedError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'OverflowError': <type 'exceptions.OverflowError'>}
            collector: <Module 'tests/test_app.py'>
            name: __builtins__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/anna/aidoc/training/linkedin/tests/test_app.py
            collector: <Module 'tests/test_app.py'>
            name: __file__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'tests.test_app.TestPage'>
            collector: <Module 'tests/test_app.py'>
            name: TestPage
        finish pytest_pycollect_makeitem --> <Class 'TestPage'> [hook]
        pytest_pycollect_makeitem [hook]
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x100909810>
            collector: <Module 'tests/test_app.py'>
            name: __loader__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/anna/aidoc/training/linkedin/tests/__pycache__/test_app.cpython-27-PYTEST.pyc
            collector: <Module 'tests/test_app.py'>
            name: __cached__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: tests.test_app
            collector: <Module 'tests/test_app.py'>
            name: __name__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: tests
            collector: <Module 'tests/test_app.py'>
            name: __package__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '__builtin__' (built-in)>
            collector: <Module 'tests/test_app.py'>
            name: @py_builtins
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module 'tests/test_app.py'>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tests/test_app.py'>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x1006b8dc0>
            collector: <Module 'tests/test_app.py'>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tests/test_app.py'>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tests/test_app.py'>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tests/test_app.py'>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tests/test_app.py'>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tests/test_app.py'>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tests/test_app.py'>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
      find_module called for: _pytest._code._pytest [assertion]
      find_module called for: py._std [assertion]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_app.py' lenresult=1 outcome='passed'> [hook]
    genitems <Class 'TestPage'> [collection]
      pytest_collectstart [hook]
          collector: <Class 'TestPage'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class 'TestPage'>
      finish pytest_make_collect_report --> <CollectReport 'tests/test_app.py::TestPage' lenresult=1 outcome='passed'> [hook]
    genitems <Instance '()'> [collection]
      pytest_collectstart [hook]
          collector: <Instance '()'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Instance '()'>
        pytest_pycollect_makeitem [hook]
            obj: tests.test_app
            collector: <Instance '()'>
            name: __module__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Instance '()'>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__dict__' of 'TestPage' objects>
            collector: <Instance '()'>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_home_page at 0x1022072a8>
            collector: <Instance '()'>
            name: test_home_page
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x102215f80>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_home_page'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_login_page at 0x102207410>
            collector: <Instance '()'>
            name: test_login_page
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x102219320>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_login_page'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__weakref__' of 'TestPage' objects>
            collector: <Instance '()'>
            name: __weakref__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_add_profile_page at 0x102207488>
            collector: <Instance '()'>
            name: test_add_profile_page
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x102219710>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_add_profile_page'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_show_add_profile_page at 0x102207398>
            collector: <Instance '()'>
            name: test_show_add_profile_page
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x102219ab8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_show_add_profile_page'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_search_page at 0x102207320>
            collector: <Instance '()'>
            name: test_search_page
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc instance at 0x102219e18>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_search_page'>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'object' objects>
            collector: <Instance '()'>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Instance '()'>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x1006bf1d0>
            collector: <Instance '()'>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Instance '()'>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Instance '()'>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Instance '()'>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'object' objects>
            collector: <Instance '()'>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Instance '()'>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'object' objects>
            collector: <Instance '()'>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Instance '()'>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'object' objects>
            collector: <Instance '()'>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Instance '()'>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Instance '()'>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'object' objects>
            collector: <Instance '()'>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_app.py::TestPage::()' lenresult=5 outcome='passed'> [hook]
    genitems <Function 'test_home_page'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_home_page'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_search_page'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_search_page'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_show_add_profile_page'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_show_add_profile_page'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_add_profile_page'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_add_profile_page'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_login_page'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_login_page'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_app.py::TestPage::()' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_app.py::TestPage' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_app.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<Function 'test_home_page'>, <Function 'test_search_page'>, <Function 'test_show_add_profile_page'>, <Function 'test_add_profile_page'>, <Function 'test_login_page'>]
          session: <Session 'linkedin'>
          config: <_pytest.config.Config object at 0x100bafb90>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'linkedin'>
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function 'test_home_page'>, <Function 'test_search_page'>, <Function 'test_show_add_profile_page'>, <Function 'test_add_profile_page'>, <Function 'test_login_page'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'linkedin'>
      pytest_runtest_protocol [hook]
          item: <Function 'test_home_page'>
          nextitem: <Function 'test_search_page'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_app.py', 4, 'TestPage.test_home_page')
            nodeid: tests/test_app.py::TestPage::()::test_home_page
        find_module called for: py._path.pathlib [assertion]
        find_module called for: pathlib [assertion]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_home_page'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='app' scope='session' baseid='tests' >
              request: <SubRequest 'app' for <Function 'test_home_page'>>
          find_module called for: linkedin [assertion]
          finish pytest_fixture_setup --> <Flask 'linkedin.app'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
              request: <SubRequest 'client' for <Function 'test_home_page'>>
          find_module called for: flask.flask [assertion]
          find_module called for: flask.testing [assertion]
          find_module called for: flask.contextlib [assertion]
          find_module called for: werkzeug.test [assertion]
          find_module called for: werkzeug.random [assertion]
          find_module called for: werkzeug.cookielib [assertion]
          find_module called for: cookielib [assertion]
          find_module called for: _LWPCookieJar [assertion]
          find_module called for: _MozillaCookieJar [assertion]
          finish pytest_fixture_setup --> <FlaskClient <Flask 'linkedin.app'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_home_page'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_home_page'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_home_page'>
          find_module called for: jinja2.ext [assertion]
          find_module called for: encodings.unicode_escape [assertion]
          find_module called for: encodings.idna [assertion]
          find_module called for: encodings.stringprep [assertion]
          find_module called for: stringprep [assertion]
          find_module called for: unicodedata [assertion]
          find_module called for: encodings.re [assertion]
          find_module called for: encodings.unicodedata [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_home_page'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_home_page'>
            nextitem: <Function 'test_search_page'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_home_page'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_home_page' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_search_page'>
          nextitem: <Function 'test_show_add_profile_page'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_app.py', 9, 'TestPage.test_search_page')
            nodeid: tests/test_app.py::TestPage::()::test_search_page
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_search_page'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
              request: <SubRequest 'client' for <Function 'test_search_page'>>
          finish pytest_fixture_setup --> <FlaskClient <Flask 'linkedin.app'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_search_page'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_search_page'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_search_page'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_search_page'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_search_page'>
            nextitem: <Function 'test_show_add_profile_page'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_search_page'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_search_page' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_show_add_profile_page'>
          nextitem: <Function 'test_add_profile_page'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_app.py', 13, 'TestPage.test_show_add_profile_page')
            nodeid: tests/test_app.py::TestPage::()::test_show_add_profile_page
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_show_add_profile_page'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
              request: <SubRequest 'client' for <Function 'test_show_add_profile_page'>>
          finish pytest_fixture_setup --> <FlaskClient <Flask 'linkedin.app'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_show_add_profile_page'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_show_add_profile_page'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_show_add_profile_page'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_show_add_profile_page'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_show_add_profile_page'>
            nextitem: <Function 'test_add_profile_page'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_show_add_profile_page'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_show_add_profile_page' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_add_profile_page'>
          nextitem: <Function 'test_login_page'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_app.py', 22, 'TestPage.test_add_profile_page')
            nodeid: tests/test_app.py::TestPage::()::test_add_profile_page
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_add_profile_page'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
              request: <SubRequest 'client' for <Function 'test_add_profile_page'>>
          finish pytest_fixture_setup --> <FlaskClient <Flask 'linkedin.app'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_add_profile_page'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_add_profile_page'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_add_profile_page'>
          find_module called for: sqlalchemy.dialects.sqlite [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.sqlalchemy [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.base [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.datetime [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.re [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.pysqlite [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.os [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.pysqlcipher [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.pysqlite2 [assertion]
          find_module called for: pysqlite2 [assertion]
          find_module called for: sqlalchemy.dialects.sqlite.sqlite3 [assertion]
          find_module called for: sqlite3 [assertion]
          find_module called for: sqlite3.dbapi2 [assertion]
          find_module called for: sqlite3.collections [assertion]
          find_module called for: sqlite3.datetime [assertion]
          find_module called for: sqlite3.time [assertion]
          find_module called for: sqlite3._sqlite3 [assertion]
          find_module called for: _sqlite3 [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_add_profile_page'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_add_profile_page'>
            nextitem: <Function 'test_login_page'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_add_profile_page'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_add_profile_page' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_login_page'>
          nextitem: None
        pytest_runtest_logstart [hook]
            location: ('tests/test_app.py', 26, 'TestPage.test_login_page')
            nodeid: tests/test_app.py::TestPage::()::test_login_page
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_login_page'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
              request: <SubRequest 'client' for <Function 'test_login_page'>>
          finish pytest_fixture_setup --> <FlaskClient <Flask 'linkedin.app'>> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_login_page'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_login_page'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_login_page'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_login_page'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_login_page'>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='client' scope='function' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='app' scope='session' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='app' scope='session' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='app' scope='session' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='app' scope='session' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='app' scope='session' baseid='tests' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_login_page'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_app.py::TestPage::()::test_login_page' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session 'linkedin'>
        exitstatus: 0
    cache-write cache/lastfailed: {} [cache]
      pytest_terminal_summary [hook]
          exitstatus: 0
          terminalreporter: <_pytest.terminal.TerminalReporter instance at 0x1021dd5a8>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x100bafb90>
    finish pytest_unconfigure --> [] [hook]
  finish [config:tmpdir]
